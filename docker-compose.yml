version: '3.4'

networks:
    backend:
    frontend:
services:
    customerdb:
        container_name: customer-db
        image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=Senha@123 
        networks:
            - backend
        ports:
            - 18001:1433
    
    customerwebapi:
        container_name: customer-api
        image: ${DOCKER_REGISTRY-}customerwebapi
        build:
            context: .
            dockerfile: CustomerWebApi/Dockerfile
        networks:
            - backend
        environment:
            - DB_HOST=customerdb
            - DB_NAME=dms_customer 
            - DB_SA_PASSWORD=Senha@123
    
    productdb:
        container_name: product-db
        image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=Senha@123 
        networks:
            - backend
        ports:
            - 18003:1433
    
    productwebapi:
        container_name: product-api
        image: ${DOCKER_REGISTRY-}productwebapi
        build:
            context: .
            dockerfile: ProductWebApi/Dockerfile
        networks:
            - backend
        environment:
            - DB_HOST=productdb
            - DB_NAME=dms_product 
            - DB_SA_PASSWORD=Senha@123
    orderdb:
        container_name: order-db
        image: mongo
        networks:
          - backend
        ports:
          - 18005:27017

    orderwebapi:
        container_name: order-api
        image: ${DOCKER_REGISTRY-}orderwebapi
        build:
            context: .
            dockerfile: OrderWebApi/Dockerfile
        networks:
          - backend
        environment:
            - DB_HOST=orderdb
            - DB_NAME=dms_order

    apigateway:
        container_name: api-gateway
        image: ${DOCKER_REGISTRY-}apigateway
        build:
            context: .
            dockerfile: ApiGateway/Dockerfile
        networks:
            - backend
            - frontend
        ports:
            - 8001:80

    blazorserverwebui:
        container_name: blazor-web-ui
        image: ${DOCKER_REGISTRY-}blazorserverwebui
        build:
            context: .
            dockerfile: BlazorServerWebUI/Dockerfile
        networks:
            - frontend
        ports:
            - 8002:80

